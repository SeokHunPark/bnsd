document.getElementById('generate-log').addEventListener('click', () => {    const startPrayer = document.getElementById('start-prayer').value;    const endPrayer = document.getElementById('end-prayer').value;    const conductor = document.getElementById('conductor').value;    const believerPractice = document.getElementById('believer-practice').value;    const pianist = document.getElementById('pianist').value;    const femaleMembers = document.getElementById('female-members').value.split('\n').join(' ');    const maleMembers = document.getElementById('male-members').value.split('\n').join(' ');    const practiceSongs = document.getElementById('practice-songs').value.split('\n');    const extraSongs = document.getElementById('extra-songs').value.split('\n');    const year = practiceDate.getFullYear();
    const month = String(practiceDate.getMonth() + 1).padStart(2, '0');
    const day = String(practiceDate.getDate()).padStart(2, '0');
    const dayOfWeek = ['일', '월', '화', '수', '목', '금', '토'][practiceDate.getDay()];

    let outputText = `📝연습일지📝\n`;
    outputText += ` ${year}.${month}.${day} ${dayOfWeek}\n`;
    outputText += `#${year}${month}${day}\n\n`;
    outputText += `시작기도 : ${startPrayer || '-'}\n`;    outputText += `마침기도 : ${endPrayer || '-'}\n`;    outputText += `🙆🏻‍♀참석단원🙆‍♂\n`;    outputText += `- 연습 진행 : ${conductor || '-'}\n`;    outputText += `- 신자 연습: ${believerPractice || '-'}\n`;    outputText += `- 반주 : ${pianist || '-'}\n`;    outputText += `- 여성 : ${femaleMembers || '-'}\n`;    outputText += `- 남성 : ${maleMembers || '-'}\n\n`;    outputText += `🎵 연습곡 🎵\n`;    const songCategories = {        '입당': [],        '봉헌': [],        '성체': [],        '파견': []    };    practiceSongs.forEach(song => {        if (song.toLowerCase().includes('입당')) {            songCategories['입당'].push(song.replace('입당', '').trim());        } else if (song.toLowerCase().includes('봉헌')) {            songCategories['봉헌'].push(song.replace('봉헌', '').trim());        } else if (song.toLowerCase().includes('성체')) {            songCategories['성체'].push(song.replace('성체', '').trim());        } else if (song.toLowerCase().includes('파견')) {            songCategories['파견'].push(song.replace('파견', '').trim());        }    });    for (const category in songCategories) {        if (songCategories[category].length > 0) {            outputText += `${category} : ${songCategories[category].join('\n         ')}\n`;        }    }    if (extraSongs.length > 0 && extraSongs[0] !== '') {        extraSongs.forEach(song => {            outputText += `${song}\n`;        });    }    document.getElementById('output').textContent = outputText;});
